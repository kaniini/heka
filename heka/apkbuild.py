import time


class APKBuildalike:
    @property
    def packagename(self):
        return '???'

    @property
    def packagedesc(self):
        return 'configuration package for %s' % self.packagename

    @property
    def version(self):
        return time.strftime('%Y%m%d')

    @property
    def revision(self):
        return 0

    @property
    def license(self):
        return 'GPL2'

    @property
    def dependencies(self):
        return ' '.join(self.get_depends())

    @property
    def replaces(self):
        return ' '.join(self.get_replaces())

    def render(self) -> str:
        template = """# Automatically generated by heka.  Any modifications will not be retained.
# Maintainer: Heka <http://github.com/kaniini/heka>
pkgname={pkg.packagename}
pkgver={pkg.version}
pkgrel={pkg.revision}
pkgdesc='{pkg.packagedesc}'
url='http://github.com/kaniini/heka'
arch='all'
license='{pkg.license}'
depends='{pkg.dependencies}'
options='!check'
replaces='{pkg.replaces}'
builddir='$srcdir'

build() {{
    :
}}

package() {{
    mkdir -p "$pkgdir"
}}
"""
        return template.format(pkg=self)

    def get_depends(self) -> set:
        return set()

    def get_replaces(self) -> set:
        return set()


if __name__ == '__main__':
    apk = APKBuildalike()
    print(apk.render())

